name: Deploy to EC2
on:
  push:
    branches: [ "main" ]

defaults:
  run:
    working-directory: baemin   # ← 여기!

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Show tree
        run: |
          pwd
          ls -al
          find . -maxdepth 2 -name gradlew -o -name 'build.gradle*'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew clean build -x test

      - name: Pick JAR & rename
        id: pick
        run: |
          JAR=$(ls build/libs/*.jar | grep -v '\-plain\.jar' | head -n 1)
          cp "$JAR" app.jar
          echo "jar_path=app.jar" >> $GITHUB_OUTPUT

      - name: Save SSH key
        run: |
          printf "%s" "$EC2_KEY" > key.pem
          chmod 600 key.pem
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      - name: Upload JAR
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem "${{ steps.pick.outputs.jar_path }}" \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/app.jar

      - name: Move & restart service
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "\
            sudo mkdir -p ${{ secrets.EC2_PATH }} && \
            sudo mv -f ~/app.jar ${{ secrets.EC2_PATH }}/app.jar && \
            sudo chown app:app ${{ secrets.EC2_PATH }}/app.jar && \
            sudo systemctl restart ${{ secrets.SERVICE_NAME }} && \
            sudo systemctl status ${{ secrets.SERVICE_NAME }} --no-pager -l || journalctl -u ${{ secrets.SERVICE_NAME }} -n 200 --no-pager"
